{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\Desktop\\\\shopper\\\\frontend\\\\src\\\\components\\\\validateButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { FileContext, AllProductsContext } from '../pages/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateButton() {\n  _s();\n  const {\n    selectedFile\n  } = useContext(FileContext);\n  const {\n    allProducts\n  } = useContext(AllProductsContext);\n  const [newProducts, setNewProducts] = useState([]);\n  const handleValidation = () => {\n    if (!selectedFile) {\n      alert('Você deve fazer upload de um arquivo CSV antes de validar.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const csvData = event.target.result;\n      const allLines = csvData.split('\\n').map(line => line.replace(/^\"|\"$/g, '').replace(/\"\\r?$/, ''));\n      const tempNewProducts = [];\n      for (let i = 1; i < allLines.length; i++) {\n        const line = allLines[i];\n        const values = line.split(',');\n        const newPrice = parseFloat(values[1]);\n        const productCode = parseInt(values[0]);\n        const productExists = allProducts.some(product => product.code === productCode);\n        let newProduct = {\n          code: productCode,\n          name: '',\n          oldPrice: 0,\n          newPrice: 0,\n          condition: 'Ok'\n        };\n        if (isNaN(newPrice)) {\n          newProduct.condition = 'O preço deve estar preenchido e ser um valor numérico válido.';\n        }\n        if (!productExists) {\n          newProduct.condition = `O código do produto ${productCode} não está presente na lista de produtos.`;\n        } else {\n          const prevProduct = allProducts.find(product => product.code === productCode);\n          newProduct.name = prevProduct ? prevProduct.name : '';\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\n        }\n        newProduct.newPrice = newPrice;\n        tempNewProducts.push(newProduct);\n      }\n      setNewProducts(tempNewProducts);\n    };\n    reader.readAsText(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleValidation,\n      children: \"Validar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), newProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pre\\xE7o Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Novo Pre\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Situa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: newProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"R$ \", product.oldPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"R$ \", product.newPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ValidateButton, \"OOB5lbuS8WeM9mW2/QDlUM20kKo=\");\n_c = ValidateButton;\nexport default ValidateButton;\nvar _c;\n$RefreshReg$(_c, \"ValidateButton\");","map":{"version":3,"names":["React","useContext","useState","FileContext","AllProductsContext","jsxDEV","_jsxDEV","ValidateButton","_s","selectedFile","allProducts","newProducts","setNewProducts","handleValidation","alert","reader","FileReader","onload","event","csvData","target","result","allLines","split","map","line","replace","tempNewProducts","i","length","values","newPrice","parseFloat","productCode","parseInt","productExists","some","product","code","newProduct","name","oldPrice","condition","isNaN","prevProduct","find","sales_price","push","readAsText","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","index","_c","$RefreshReg$"],"sources":["C:/Users/leand/Desktop/shopper/frontend/src/components/validateButton.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { FileContext, AllProductsContext } from '../pages/main';\r\n\r\nfunction ValidateButton() {\r\n  const { selectedFile } = useContext(FileContext);\r\n  const { allProducts } = useContext(AllProductsContext);\r\n  const [newProducts, setNewProducts] = useState([]);\r\n\r\n  const handleValidation = () => {\r\n    if (!selectedFile) {\r\n      alert('Você deve fazer upload de um arquivo CSV antes de validar.');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const csvData = event.target.result;\r\n      const allLines = csvData.split('\\n').map(line => line.replace(/^\"|\"$/g, '').replace(/\"\\r?$/, ''));\r\n\r\n      const tempNewProducts = [];\r\n\r\n      for (let i = 1; i < allLines.length; i++) {\r\n        const line = allLines[i];\r\n        const values = line.split(',');\r\n        const newPrice = parseFloat(values[1]);\r\n        const productCode = parseInt(values[0]);\r\n        const productExists = allProducts.some(product => product.code === productCode);\r\n        \r\n        let newProduct = {\r\n          code: productCode,\r\n          name: '',\r\n          oldPrice: 0,\r\n          newPrice: 0,\r\n          condition: 'Ok'\r\n        };\r\n\r\n        if (isNaN(newPrice)) {\r\n          newProduct.condition = 'O preço deve estar preenchido e ser um valor numérico válido.';\r\n        }\r\n\r\n        if (!productExists) {\r\n          newProduct.condition = `O código do produto ${productCode} não está presente na lista de produtos.`;\r\n        } else {\r\n          const prevProduct = allProducts.find(product => product.code === productCode);\r\n          newProduct.name = prevProduct ? prevProduct.name : '';\r\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\r\n        }\r\n\r\n        newProduct.newPrice = newPrice; \r\n        tempNewProducts.push(newProduct);\r\n      }\r\n\r\n      setNewProducts(tempNewProducts);\r\n    };\r\n    reader.readAsText(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleValidation}>Validar</button>\r\n      {newProducts.length > 0 && (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Código</th>\r\n              <th>Nome</th>\r\n              <th>Preço Atual</th>\r\n              <th>Novo Preço</th>\r\n              <th>Situação</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {newProducts.map((product, index) => (\r\n              <tr key={index}>\r\n                <td>{product.code}</td>\r\n                <td>{product.name}</td>\r\n                <td>R$ {product.oldPrice}</td>\r\n                <td>R$ {product.newPrice}</td>\r\n                <td>{product.condition}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidateButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}