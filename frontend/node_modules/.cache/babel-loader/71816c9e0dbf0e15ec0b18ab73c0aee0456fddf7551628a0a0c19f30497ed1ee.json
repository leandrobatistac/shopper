{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\Desktop\\\\shopper\\\\frontend\\\\src\\\\components\\\\validateButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { FileContext, AllProductsContext, AllOkContext } from '../pages/main';\nimport NewProductsTable from '../components/newProductsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateButton() {\n  _s();\n  const [newProducts, setNewProducts] = useState([]);\n  const {\n    setAllOk\n  } = useContext(AllOkContext);\n  const {\n    selectedFile\n  } = useContext(FileContext);\n  const {\n    allProducts\n  } = useContext(AllProductsContext);\n  const handleValidation = () => {\n    if (!selectedFile) {\n      alert('Você deve fazer upload de um arquivo CSV antes de validar.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const csvData = event.target.result;\n      const allLines = csvData.split('\\n').map(line => line.replace(/^\"|\"$/g, '').replace(/\"\\r?$/, ''));\n      const tempNewProducts = [];\n      let verifyOk = true;\n      for (let i = 1; i < allLines.length; i++) {\n        const line = allLines[i];\n        const values = line.split(',');\n        const newPrice = parseFloat(values[1]);\n        const productCode = parseInt(values[0]);\n        const productExists = allProducts.some(product => product.code === productCode);\n        const prevProduct = allProducts.find(product => product.code === productCode);\n        let newProduct = {\n          code: productCode,\n          name: '',\n          oldPrice: 0,\n          newPrice: 0,\n          condition: 'Ok'\n        };\n        if (isNaN(newPrice)) {\n          newProduct.condition = 'O preço deve estar preenchido e ser um valor numérico válido.';\n          verifyOk = false;\n        }\n        if (!productExists) {\n          newProduct.condition = `O código do produto ${productCode} não está presente na lista de produtos.`;\n          verifyOk = false;\n        }\n        if (newPrice < prevProduct.cost_price) {\n          newProduct.condition = `O preço de venda do produto não pode ser menor que o preço de custo.`;\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\n          newProduct.name = prevProduct ? prevProduct.name : '';\n          verifyOk = false;\n        }\n        const prevPriceFixed = parseFloat(prevProduct.sales_price).toFixed(2);\n        const newPriceFixed = parseFloat(newPrice).toFixed(2);\n        const lowerBound = parseFloat((prevPriceFixed * 0.9).toFixed(2));\n        const upperBound = parseFloat((prevPriceFixed * 1.1).toFixed(2));\n        console.log(lowerBound);\n        console.log(upperBound);\n        if (newPriceFixed < lowerBound || newPriceFixed > upperBound) {\n          newProduct.condition = `O novo preço deve ser exatamente 10% a mais ou a menos que o preço atual.`;\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\n          newProduct.name = prevProduct ? prevProduct.name : '';\n          verifyOk = false;\n        } else {\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\n          newProduct.name = prevProduct ? prevProduct.name : '';\n        }\n        newProduct.newPrice = newPrice;\n        tempNewProducts.push(newProduct);\n      }\n      setNewProducts(tempNewProducts);\n      setAllOk(verifyOk);\n    };\n    reader.readAsText(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleValidation,\n      children: \"Validar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), newProducts.length > 0 && /*#__PURE__*/_jsxDEV(NewProductsTable, {\n      newProducts: newProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ValidateButton, \"+6f+13kIgOmCav56+n7LyPlvB+g=\");\n_c = ValidateButton;\nexport default ValidateButton;\nvar _c;\n$RefreshReg$(_c, \"ValidateButton\");","map":{"version":3,"names":["React","useContext","useState","FileContext","AllProductsContext","AllOkContext","NewProductsTable","jsxDEV","_jsxDEV","ValidateButton","_s","newProducts","setNewProducts","setAllOk","selectedFile","allProducts","handleValidation","alert","reader","FileReader","onload","event","csvData","target","result","allLines","split","map","line","replace","tempNewProducts","verifyOk","i","length","values","newPrice","parseFloat","productCode","parseInt","productExists","some","product","code","prevProduct","find","newProduct","name","oldPrice","condition","isNaN","cost_price","sales_price","prevPriceFixed","toFixed","newPriceFixed","lowerBound","upperBound","console","log","push","readAsText","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leand/Desktop/shopper/frontend/src/components/validateButton.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { FileContext, AllProductsContext, AllOkContext } from '../pages/main';\r\nimport NewProductsTable from '../components/newProductsTable';\r\n\r\nfunction ValidateButton() {\r\n  const [newProducts, setNewProducts] = useState([]);\r\n\r\n  const { setAllOk } = useContext(AllOkContext);\r\n  const { selectedFile } = useContext(FileContext);\r\n  const { allProducts } = useContext(AllProductsContext);\r\n\r\n  const handleValidation = () => {\r\n    if (!selectedFile) {\r\n      alert('Você deve fazer upload de um arquivo CSV antes de validar.');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const csvData = event.target.result;\r\n      const allLines = csvData.split('\\n').map(line => line.replace(/^\"|\"$/g, '').replace(/\"\\r?$/, ''));\r\n\r\n      const tempNewProducts = [];\r\n      let verifyOk = true;\r\n\r\n      for (let i = 1; i < allLines.length; i++) {\r\n        const line = allLines[i];\r\n        const values = line.split(',');\r\n        const newPrice = parseFloat(values[1]);\r\n        const productCode = parseInt(values[0]);\r\n        const productExists = allProducts.some(product => product.code === productCode);\r\n        const prevProduct = allProducts.find(product => product.code === productCode);\r\n        \r\n        let newProduct = {\r\n          code: productCode,\r\n          name: '',\r\n          oldPrice: 0,\r\n          newPrice: 0,\r\n          condition: 'Ok'\r\n        };\r\n\r\n        if (isNaN(newPrice)) {\r\n          newProduct.condition = 'O preço deve estar preenchido e ser um valor numérico válido.';\r\n          verifyOk = false;\r\n        }\r\n\r\n        if (!productExists) {\r\n          newProduct.condition = `O código do produto ${productCode} não está presente na lista de produtos.`;\r\n          verifyOk = false;\r\n        } \r\n\r\n        if (newPrice < prevProduct.cost_price) {\r\n          newProduct.condition = `O preço de venda do produto não pode ser menor que o preço de custo.`;\r\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\r\n          newProduct.name = prevProduct ? prevProduct.name : '';\r\n          verifyOk = false;\r\n        } \r\n\r\n        const prevPriceFixed = parseFloat(prevProduct.sales_price).toFixed(2);\r\n        const newPriceFixed = parseFloat(newPrice).toFixed(2);\r\n        const lowerBound = parseFloat((prevPriceFixed * 0.9).toFixed(2));\r\n        const upperBound = parseFloat((prevPriceFixed * 1.1).toFixed(2));\r\n\r\n        console.log(lowerBound);\r\n        console.log(upperBound);\r\n\r\n        if (newPriceFixed < lowerBound || newPriceFixed > upperBound) {\r\n          newProduct.condition = `O novo preço deve ser exatamente 10% a mais ou a menos que o preço atual.`;\r\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\r\n          newProduct.name = prevProduct ? prevProduct.name : '';\r\n          verifyOk = false;\r\n        } \r\n\r\n        else {\r\n          newProduct.oldPrice = prevProduct ? prevProduct.sales_price : 0;\r\n          newProduct.name = prevProduct ? prevProduct.name : '';\r\n        }\r\n\r\n        newProduct.newPrice = newPrice; \r\n        tempNewProducts.push(newProduct);\r\n      }\r\n\r\n      setNewProducts(tempNewProducts);\r\n      setAllOk(verifyOk);\r\n    };\r\n\r\n    reader.readAsText(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleValidation}>Validar</button>\r\n      {newProducts.length > 0 && <NewProductsTable newProducts={newProducts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidateButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,EAAEC,kBAAkB,EAAEC,YAAY,QAAQ,eAAe;AAC7E,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM;IAAEW;EAAS,CAAC,GAAGZ,UAAU,CAACI,YAAY,CAAC;EAC7C,MAAM;IAAES;EAAa,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAChD,MAAM;IAAEY;EAAY,CAAC,GAAGd,UAAU,CAACG,kBAAkB,CAAC;EAEtD,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACF,YAAY,EAAE;MACjBG,KAAK,CAAC,4DAA4D,CAAC;MACnE;IACF;IAEA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;MACnC,MAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;MAEjG,MAAMC,eAAe,GAAG,EAAE;MAC1B,IAAIC,QAAQ,GAAG,IAAI;MAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,MAAMJ,IAAI,GAAGH,QAAQ,CAACO,CAAC,CAAC;QACxB,MAAME,MAAM,GAAGN,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;QAC9B,MAAMS,QAAQ,GAAGC,UAAU,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC;QACtC,MAAMG,WAAW,GAAGC,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;QACvC,MAAMK,aAAa,GAAGxB,WAAW,CAACyB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKL,WAAW,CAAC;QAC/E,MAAMM,WAAW,GAAG5B,WAAW,CAAC6B,IAAI,CAACH,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKL,WAAW,CAAC;QAE7E,IAAIQ,UAAU,GAAG;UACfH,IAAI,EAAEL,WAAW;UACjBS,IAAI,EAAE,EAAE;UACRC,QAAQ,EAAE,CAAC;UACXZ,QAAQ,EAAE,CAAC;UACXa,SAAS,EAAE;QACb,CAAC;QAED,IAAIC,KAAK,CAACd,QAAQ,CAAC,EAAE;UACnBU,UAAU,CAACG,SAAS,GAAG,+DAA+D;UACtFjB,QAAQ,GAAG,KAAK;QAClB;QAEA,IAAI,CAACQ,aAAa,EAAE;UAClBM,UAAU,CAACG,SAAS,GAAI,uBAAsBX,WAAY,0CAAyC;UACnGN,QAAQ,GAAG,KAAK;QAClB;QAEA,IAAII,QAAQ,GAAGQ,WAAW,CAACO,UAAU,EAAE;UACrCL,UAAU,CAACG,SAAS,GAAI,sEAAqE;UAC7FH,UAAU,CAACE,QAAQ,GAAGJ,WAAW,GAAGA,WAAW,CAACQ,WAAW,GAAG,CAAC;UAC/DN,UAAU,CAACC,IAAI,GAAGH,WAAW,GAAGA,WAAW,CAACG,IAAI,GAAG,EAAE;UACrDf,QAAQ,GAAG,KAAK;QAClB;QAEA,MAAMqB,cAAc,GAAGhB,UAAU,CAACO,WAAW,CAACQ,WAAW,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;QACrE,MAAMC,aAAa,GAAGlB,UAAU,CAACD,QAAQ,CAAC,CAACkB,OAAO,CAAC,CAAC,CAAC;QACrD,MAAME,UAAU,GAAGnB,UAAU,CAAC,CAACgB,cAAc,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChE,MAAMG,UAAU,GAAGpB,UAAU,CAAC,CAACgB,cAAc,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;QAEhEI,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;QACvBE,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;QAEvB,IAAIF,aAAa,GAAGC,UAAU,IAAID,aAAa,GAAGE,UAAU,EAAE;UAC5DX,UAAU,CAACG,SAAS,GAAI,2EAA0E;UAClGH,UAAU,CAACE,QAAQ,GAAGJ,WAAW,GAAGA,WAAW,CAACQ,WAAW,GAAG,CAAC;UAC/DN,UAAU,CAACC,IAAI,GAAGH,WAAW,GAAGA,WAAW,CAACG,IAAI,GAAG,EAAE;UACrDf,QAAQ,GAAG,KAAK;QAClB,CAAC,MAEI;UACHc,UAAU,CAACE,QAAQ,GAAGJ,WAAW,GAAGA,WAAW,CAACQ,WAAW,GAAG,CAAC;UAC/DN,UAAU,CAACC,IAAI,GAAGH,WAAW,GAAGA,WAAW,CAACG,IAAI,GAAG,EAAE;QACvD;QAEAD,UAAU,CAACV,QAAQ,GAAGA,QAAQ;QAC9BL,eAAe,CAAC6B,IAAI,CAACd,UAAU,CAAC;MAClC;MAEAjC,cAAc,CAACkB,eAAe,CAAC;MAC/BjB,QAAQ,CAACkB,QAAQ,CAAC;IACpB,CAAC;IAEDb,MAAM,CAAC0C,UAAU,CAAC9C,YAAY,CAAC;EACjC,CAAC;EAED,oBACEN,OAAA;IAAAqD,QAAA,gBACErD,OAAA;MAAQsD,OAAO,EAAE9C,gBAAiB;MAAA6C,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDvD,WAAW,CAACsB,MAAM,GAAG,CAAC,iBAAIzB,OAAA,CAACF,gBAAgB;MAACK,WAAW,EAAEA;IAAY;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAACxD,EAAA,CA5FQD,cAAc;AAAA0D,EAAA,GAAd1D,cAAc;AA8FvB,eAAeA,cAAc;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}